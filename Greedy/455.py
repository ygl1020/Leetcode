#给你两个数组,找到第一个数组中再第二个数组大于等于它的值的数量.每一个值只可以使用一次
def findContentChildren(self, g: List[int], s: List[int]) -> int:
        """
        先把两个数组排序,然后用双指针.我想到了要用双指针但是我那时候没有搞清楚while循环里面的逻辑，我们每次对比都是要移动j指针的,当我们找到合适的饼干就需要把指针j
        向后移动一位.如果没有找到那么我们也要向后移动j一个单位来判断下一个j下标的值是否符合要求.只有当找到符合要求的饼干我们才移动i指针
        
        注意是这里双指针我们是不断移动s数组的指针,因为如果s[j]<=g[i]的话我们就需要移动到下一位饼干进行判断.如果s[j]>g[i],我们知道再g数组中不可能会有元素比s[j]小,所以我们也移动s的下一个
        元素.只有到我们判断g[i] <=s[j]时我们移动g的下一个元素
        """
        g.sort()
        s.sort()
        i,j,count =0,0,0
        while i <len(g) and j <len(s):
            if g[i]<=s[j]:
                count+=1
                i+=1
            j+=1
        return count
            